server:
  port: ${SERVER_PORT:8080}

spring:
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    exchange: ${RABBITMQ_EXCHANGE:fanout}
    queue: ${RABBITMQ_QUEUE:notification_queue}
    routing-key: ${RABBITMQ_ROUTING_KEY:notification_key}
    exchange-durable: ${RABBITMQ_EXCHANGE_DURABLE:true}
    

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:netnotify}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    properties:
      hibernate:
        format_sql: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}      

  # Spring LDAP auto-configuration properties (mapped from environment variables)
  ldap:
    urls: ${LDAP_URL:}
    base: ${LDAP_BASE_DN:}
    username: ${LDAP_MANAGER_DN:}
    password: ${LDAP_MANAGER_PASSWORD:}

# LDAP configuration (used by LdapAuthenticationFilter and potential LDAP services)
ldap:
  # URL do servidor LDAP/AD. Ex: ldap://ad.example.org:389 ou ldaps://ad.example.org:636
  url: ${LDAP_URL:}
  # Base DN para buscas (opcional). Ex: dc=example,dc=org
  baseDn: ${LDAP_BASE_DN:}
  # Padrão para montar o DN do usuário para bind direto. {0} será substituído pelo sAMAccountName
  # Ex: uid={0},ou=people  ou CN={0},CN=Users
  userDnPattern: ${LDAP_USER_DN_PATTERN:}
  # Conta de serviço (opcional) para buscas no LDAP. Caso seja informada, pode ser usada para procurar atributos
  managerDn: ${LDAP_MANAGER_DN:}
  managerPassword: ${LDAP_MANAGER_PASSWORD:}
  # Filtro de busca para localizar o usuário quando não se usa userDnPattern.
  # Exemplo AD: (sAMAccountName={0})
  searchFilter: ${LDAP_SEARCH_FILTER:(sAMAccountName={0})}
  # Authentication containers (e.g. CN=Users) that will be prepended to baseDn for searches
  authenticationContainers: ${LDAP_AUTH_CONTAINERS:CN=Users}
  # Search scope: SUBTREE, ONELEVEL or OBJECT
  searchScope: ${LDAP_SEARCH_SCOPE:ONELEVEL}
  # Timeout for LDAP operations (seconds)
  timeoutSeconds: ${LDAP_TIMEOUT_SECONDS:25}
  # Grupos permitidos para autenticação (DNs completos separados por ponto e vírgula)
  allowedGroups: ${LDAP_ALLOWED_GROUPS:}
  # Grupo de administradores (DN completo)
  adminGroup: ${LDAP_ADMIN_GROUP:}
  

jwt:
  secret-key: ${JWT_SECRET:defaultSecretKey} # Chave secreta para assinar os tokens JWT
  expiration-time: ${JWT_EXPIRATION:3600000} # Tempo de expiração em segundos

app:
  timezone: ${APP_TIMEZONE:America/Recife} # Timezone da aplicação, usado para datas e horários

